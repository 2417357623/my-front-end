@import url("https://fonts.bunny.net/css2?family=K2D:wght@400&display=swap");
@import url("https://fonts.bunny.net/css2?family=Arimo:wght@400&;700display=swap");

*,
*::before,
*::after {
    box-sizing: border-box;
}

:root,
[data-theme="light"] {
    --font-1-family: Arial, Arimo, sans-serif;
    --font-1-weight-normal: 400;
    --font-1-weight-bold: 700;
    --font-2-family: K2D, sans-serif;
    --font-2-weight-normal: 400;
    --font-2-weight-bold: 700;
    --line-height-small: 1.1;
    --line-height-medium: 1.25; /* 1.25 is a good default line height which is slightly larger than the small line height, but still compact enough to allow for good readability */
    --line-height-large: 1.5;
    --border-width: 0.15rem;
    --outline-offset: calc(0.5 * var(--border-width));
    --stroke-width-icon: calc(0.8 * var(--border-width));
    --radius-small: 0.25rem;
    --radius-medium: 0.5rem;
    --radius-large: 1rem;
    --size-small: clamp(0.5rem, 3vw, 1rem);
    --size-medium: clamp(0.5rem, 5vw, 1.5rem);
    --size-large: clamp(0.5rem, calc(8vw - 0.5rem), 8rem);
    --speed-fast: 300ms;
    --speed-medium: 500ms;
    --speed-slow: 1500ms;
    --timing-function-default: ease-in-out;
    --noise: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='n'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch' /%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23n)' /%3E%3C/svg%3E%0A");
    --l: 0.4;
    /* base color lightness */
    --c: 0.199;
    /* base color chroma */
    --h: 285;
    /* base color hue */
    --color-text-1: #333;
    --color-text-2: #777;
    --color-text-button: #fff;
    --color-background-1: oklch(calc(var(--l) + 0.48) calc(var(--c) - 0.15) var(--h));
    --color-background-2: #fff;
    --color-background-modal: var(--color-background-2);
    --color-accent-1: oklch(var(--l) var(--c) var(--h));
    --color-link-1: oklch(var(--l) var(--c) var(--h));
    --color-link-1-active: oklch(calc(var(--l) + 0.48) calc(var(--c) - 0.15) var(--h));
    --color-link-1-hover: oklch(calc(var(--l) + 0.2) var(--c) var(--h));
    --filter-image: none;
    --gradient-1: linear-gradient(315deg, var(--color-background-1), var(--color-background-2));
    --shadow-1: 0 0 3rem oklch(calc(var(--l) + 0) calc(var(--c) - 0.05) var(--h) / 0.75);
    --shadow-2: 0 0 1rem var(--color-background-1);
    --shadow-modal: 0 0 2rem oklch(var(--l) 0.025 var(--h) / 0.75);
    color: var(--color-text-1);
    color-scheme: only light;
}

::backdrop,
[data-theme="light"] ::backdrop {
    backdrop-filter: blur(3px);
    background-color: #dddb;
}

[data-theme="dark"] {
    --l: 0.66;
    --color-text-1: #ddd;
    --color-text-2: #444;
    --color-background-1: oklch(calc(var(--l) - 0.34) calc(var(--c) - 0.13) var(--h));
    --color-background-2: oklch(calc(var(--l) - 0.46) calc(var(--c) - 0.13) var(--h));
    --color-link-1: oklch(calc(var(--l) - 0.2) var(--c) var(--h));
    --color-link-2: oklch(calc(var(--l) - 0.2) calc(var(--c) + 0) calc(var(--h) + 180));
    --filter-hover: brightness(1.2) contrast(1.5) saturate(0.9);
    --filter-image: brightness(0.8);
    --shadow-1: 0 0.5rem 1rem oklch(calc(var(--l) - 0.45) calc(var(--c) - 0.12) var(--h) / 0.75);
    --shadow-modal: 0 0 2rem var(--border-width) oklch(0.1 0.025 var(--h) / 0.75);
    color: var(--color-text-1);
    color-scheme: only dark;
}

[data-theme="dark"] ::backdrop {
    background-color: #111a;
}

[hidden] {
    display: none !important;
}

:focus {
    outline-offset: var(--outline-offset);
}

.sr-only:not(:focus):not(:active):not(:focus-within) {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
}
.container {
    width: 300px; /* 容器宽度设置为300px */
    border: 1px solid black; /* 添加边框以更清楚地看到容器 */
}

img,
svg {
    block-size: auto;
    max-inline-size: 100%;
}

img,
svg:not(.icon) {
    filter: var(--filter-image);
}

svg.icon {
    stroke-width: var(--stroke-width-icon);
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: var(--font-1-family);
    font-weight: var(--font-1-weight-bold);
    margin: 0;
    text-wrap: balance;
}

a {
    color: var(--color-link-1);
    transition: color var(--speed-fast) var(--timing-function-default);
}

a:focus-visible,
a:hover {
    filter: var(--filter-hover);
}

p {
    margin: 0;
}

input,
textarea {
    background-color: transparent;
    color: inherit;
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    margin: 0;
}

input:not([type="checkbox"]):not([type="radio"]):not([type="file"]):not([type="reset"]):not([type="submit"]):not([type="button"]),
textarea {
    block-size: 3rem;
    border: var(--border-width) solid currentColor;
    border-radius: var(--radius-small);
    display: flex;
    inline-size: 100%;
    max-inline-size: 100%;
    padding-inline: 1rem;
}

textarea {
    block-size: 6rem;
}

input[type="checkbox"] {
    align-items: center;
    appearance: none;
    block-size: 1.8rem;
    border: var(--border-width) solid currentColor;
    border-radius: var(--radius-small);
    cursor: pointer;
    display: flex;
    flex-shrink: 0;
    inline-size: 1.8rem;
    justify-content: center;
}

input[type="checkbox"]:checked::before {
    color: var(--color-accent-1);
    content: "\2713";
    font-size: 1.4rem;
    font-weight: var(--font-1-weight-bold);
}

input[type="checkbox"].toggle {
    border-radius: 0.9rem;
    inline-size: 3.25rem;
    justify-content: start;
    margin: 0;
    padding: 0.2rem;
}

input[type="checkbox"].toggle::before {
    background-color: currentColor;
    block-size: calc(1.6rem - 2 * var(--border-width));
    border-radius: 50%;
    content: "";
    flex-shrink: 0;
    inline-size: calc(1.6rem - 2 * var(--border-width));
    transition: all var(--speed-fast) var(--timing-function-default);
}

input[type="checkbox"].toggle:checked::before {
    background-color: var(--color-accent-1);
    margin-left: 1.25rem;
}

input[type="radio"] {
    align-items: center;
    appearance: none;
    block-size: 1.8rem;
    border: var(--border-width) solid currentColor;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    flex-shrink: 0;
    inline-size: 1.8rem;
    justify-content: center;
}

input[type="radio"]:checked::before {
    background-color: var(--color-accent-1);
    block-size: calc(1.6rem - 2 * var(--border-width));
    border-radius: 50%;
    content: "";
    flex-shrink: 0;
    inline-size: calc(1.6rem - 2 * var(--border-width));
    transition: all var(--speed-fast) var(--timing-function-default);
}

button,
input[type="button"],
input[type="submit"],
input[type="reset"],
.button {
    align-items: center;
    appearance: none;
    background: none;
    background-color: var(--color-link-1);
    border: none;
    border-color: transparent;
    color: var(--color-text-button);
    cursor: pointer;
    display: flex;
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    justify-content: center;
    min-block-size: 2.5rem;
    padding-block: 0.25rem;
    padding-inline: 1rem;
    transition: all var(--speed-fast) var(--timing-function-default);
    inline-size: fit-content;
    min-inline-size: 10rem;
}

button:focus-visible,
button:hover,
input[type="button"]:focus-visible,
input[type="button"]:hover,
input[type="reset"]:focus-visible,
input[type="reset"]:hover,
input[type="submit"]:focus-visible,
input[type="submit"]:hover,
.hovered {
    background-color: var(--color-link-1-hover);
}

button:focus,
.active {
    background-color: var(--color-link-1-active);
    color: #000;
}

button.outline,
input[type="button"].outline,
input[type="reset"].outline,
input[type="submit"].outline {
    background-color: transparent;
    border: var(--border-width) solid currentColor;
    color: var(--color-link-1);
}

button.outline:focus-visible,
button.outline:hover,
input[type="button"].outline:focus-visible,
input[type="button"].outline:hover,
input[type="reset"].outline:focus-visible,
input[type="reset"].outline:hover,
input[type="submit"].outline:focus-visible,
input[type="submit"].outline:hover {
    background-color: oklch(var(--l) var(--c) var(--h) / 0.2);
}

button.secondary,
input[type="button"].secondary,
input[type="reset"].secondary,
input[type="submit"].secondary {
    background-color: var(--color-link-2);
}

button.secondary:focus-visible,
button.secondary:hover,
input[type="button"].secondary:focus-visible,
input[type="button"].secondary:hover,
input[type="reset"].secondary:focus-visible,
input[type="reset"].secondary:hover,
input[type="submit"].secondary:focus-visible,
input[type="submit"].secondary:hover {
    filter: var(--filter-hover);
}

button.link {
    background-color: transparent;
    border: none;
    border-radius: 0;
    color: var(--color-link-1);
    display: inline;
    font-weight: var(--font-1-weight-normal);
    inline-size: auto;
    min-block-size: 0;
    padding: 0;
    text-align: inherit;
}

button.link:focus-visible,
button.link:hover {
    text-decoration: underline;
}

button[disabled],
input[type="button"][disabled],
input[type="reset"][disabled],
input[type="submit"][disabled] {
    background-color: transparent;
    color: currentColor;
    cursor: not-allowed;
}

select {
    appearance: none;
    background-color: transparent;
    background-image: conic-gradient(from -40deg, currentColor 80deg, transparent 80deg);
    background-position: calc(100% - 1rem) calc(50% + 0.25rem);
    background-repeat: no-repeat;
    background-size: 1rem 1rem;
    block-size: 3rem;
    border: var(--border-width) solid currentColor;
    border-radius: var(--radius-small);
    color: inherit;
    cursor: pointer;
    display: flex;
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    inline-size: 100%;
    margin-block: var(--size-medium);
    max-inline-size: 100%;
    padding-inline: 1rem 3rem;
}

select:focus {
    background-image: conic-gradient(from 140deg, currentColor 80deg, transparent 80deg);
    background-position: calc(100% - 1rem) calc(50% - 0.25rem);
}

label {
    cursor: pointer;
}

dialog[open] {
    animation: var(--speed-fast) var(--timing-function-default) 0s backwards scale-up;
    background-color: transparent;
    border: none;
    color: inherit;
    inset: 0;
    max-block-size: 100%;
    max-inline-size: 100%;
    overflow: visible;
    padding: 0;
    position: fixed;
}

dialog>* {
    background-color: var(--color-background-modal);
    border-radius: var(--radius-medium);
    box-shadow: var(--shadow-modal);
    display: grid;
    padding: var(--size-medium);
    position: relative;
}

.hiding {
    animation: var(--speed-fast) var(--timing-function-default) 0s backwards scale-down !important;
}

nav ul {
    display: flex;
    list-style: none;
    margin: 0;
    padding: 0;
}

body {
    accent-color: var(--color-accent-1);
    align-items: center;
    background-color: var(--color-background-1);
    display: grid;
    font-family: var(--font-1-family);
    font-weight: var(--font-1-weight-normal);
    line-height: var(--line-height-medium);
    margin: 0;
    min-block-size: 100vh;
    padding-inline: 0.5rem;
}

main {
    animation: var(--speed-medium) var(--timing-function-default) 0s backwards scale-up;
    background-color: var(--color-background-2);
    box-shadow: var(--shadow-1);
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    inline-size: 100%;
    max-inline-size: 50rem;
    padding-block: var(--size-medium);
    padding-inline: var(--size-large);
    min-block-size: 100vh;
    margin-inline: auto;
    padding-block-end: 4rem;
    overflow-x: clip;
}

main>* {
    animation: var(--speed-medium) var(--timing-function-default) 0s backwards from-left;
}

main>h2 {
    animation-delay: calc(1 * var(--speed-fast));
}

main>p:nth-of-type(1),
main>div:nth-of-type(1) {
    animation-delay: calc(1.5 * var(--speed-fast));
}

main>p:nth-of-type(2),
main>div:nth-of-type(2) {
    animation-delay: calc(2 * var(--speed-fast));
}

main>p:nth-of-type(3),
main>div:nth-of-type(3) {
    animation-delay: calc(2.5 * var(--speed-fast));
}

main>p:nth-of-type(4),
main>div:nth-of-type(4) {
    animation-delay: calc(3 * var(--speed-fast));
}

main>p:nth-of-type(5),
main>div:nth-of-type(5) {
    animation-delay: calc(3.5 * var(--speed-fast));
}

main>p:nth-of-type(6),
main>div:nth-of-type(6) {
    animation-delay: calc(4 * var(--speed-fast));
}

h2 {
    text-transform: uppercase;
    font-family: var(--font-2-family);
    font-size: 1.1rem;
    background-color: #8885;
    inline-size: min-content;
    line-height: 1;
    display: flex;
    padding-block: 0.25rem;
    padding-inline: 1rem;
    border-radius: var(--radius-small);
    box-shadow: 0 0.2rem 0.25rem #0005;
    margin-block-end: 0.25rem;
}

h2:not(:first-of-type) {
    margin-block-start: 1.5rem;
}

h3 {
    font-size: 1rem;
}

.h1 {
    font-weight: var(--font-1-weight-bold);
    font-size: 2rem;
}

.h2 {
    font-weight: var(--font-1-weight-bold);
    font-size: 1.5rem;
}

.h3 {
    font-weight: var(--font-1-weight-bold);
    font-size: 1.25rem;
}

#settings-modal {
    inline-size: 23rem;
}

#settings-modal h2 {
    text-transform: capitalize;
}

#settings-modal p {
    margin: 0;
    text-transform: capitalize;
}

#settings-modal label {
    display: block;
    margin-block: 1rem 0.25rem;
    text-transform: capitalize;
}

.settings-open-button {
    background-color: var(--color-background-1);
    block-size: 3rem;
    border: 0 solid currentColor;
    color: inherit;
    inline-size: auto;
    inset-block-end: 0.5rem;
    inset-inline-start: 0.5rem;
    min-inline-size: 3rem;
    padding-inline: 0.75rem;
    position: fixed;
}

.settings-open-button:focus-visible,
.settings-open-button:hover {
    background-color: var(--color-background-1);
    border-width: var(--border-width);
}

.settings-open-button span {
    padding-inline-start: 0.25rem;
    text-transform: capitalize;
}

.settings-open-button svg,
.close-button svg {
    block-size: auto;
    inline-size: 1.5rem;
}

.settings-open-button:not(:hover):not(:focus):not(:active):not(:focus-within) span,
.close-button span {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
}

.close-button {
    background-color: transparent;
    block-size: 3rem;
    color: inherit;
    inline-size: 3rem;
    inset-block-start: 0.25rem;
    inset-inline-end: 0.25rem;
    padding: 0;
    position: absolute;
    min-inline-size: 0;
    border-radius: var(--radius-small);
}

.close-button:focus-visible,
.close-button:hover {
    color: var(--color-background-modal);
}

#settings-hue-wrapper {
    align-items: center;
    display: flex;
}

#settings-hue {
    -webkit-appearance: none;
    background-image: linear-gradient(to right, oklch(var(--l) var(--c) 0), oklch(var(--l) var(--c) 90), oklch(var(--l) var(--c) 180), oklch(var(--l) var(--c) 270), oklch(var(--l) var(--c) 360));
    block-size: 1.8rem;
    border: none;
    border-radius: var(--radius-small);
    color: inherit;
    cursor: crosshair;
    display: flex;
    inline-size: 17.5rem;
    margin-inline: 0;
    max-inline-size: 100%;
    padding: 0;
}

#settings-hue::-moz-range-thumb {
    background: transparent;
    border: var(--border-width) solid currentColor;
    border-radius: 1rem;
    box-sizing: content-box;
    cursor: pointer;
    height: 1.8rem;
    width: var(--radius-small);
}

#settings-hue::-webkit-slider-thumb {
    -webkit-appearance: none;
    background: transparent;
    border: var(--border-width) solid currentColor;
    border-radius: 1rem;
    box-sizing: content-box;
    cursor: pointer;
    height: 1.8rem;
    width: var(--border-width);
}

#settings-hue::-ms-thumb {
    background: transparent;
    border: var(--border-width) solid currentColor;
    border-radius: 1rem;
    box-sizing: content-box;
    cursor: pointer;
    height: 1.8rem;
    width: var(--border-width);
}

#settings-hue-preview {
    background-color: var(--color-accent-1);
    block-size: 2rem;
    border-radius: var(--radius-largest);
    display: flex;
    inline-size: 2rem;
    margin-inline-end: 0.25rem;
}

@keyframes scale-up {
    from {
        opacity: 0;
        transform: scaleX(0);
    }

    to {
        opacity: 1;
        transform: scaleX(1);
    }
}

@keyframes scale-down {
    from {
        opacity: 1;
        transform: scale(1);
    }

    to {
        opacity: 0;
        transform: scale(0);
    }
}

@keyframes fade-in {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes from-top {
    from {
        transform: translateY(-100vh);
    }

    to {
        transform: translateY(0);
    }
}

@keyframes from-bottom {
    from {
        transform: translateY(100vh);
    }

    to {
        transform: translateY(0);
    }
}

@keyframes from-left {
    from {
        transform: translateX(-100vw);
    }

    to {
        transform: translateX(0);
    }
}

@keyframes from-right {
    from {
        transform: translateX(100vw);
    }

    to {
        transform: translateX(0);
    }
}

@media (min-width: 40rem) {}